#!/usr/bin/rvtl
1000  :--------------------------------------------------------------
1010 / "  このプログラムは rvtl の文の使用例です．" /
1020   "  特に意味のある動作をするわけではなく，この実行例と" /
1030   "  ソースを比較して rvtl の文法を理解する補助としてください．" / /
1040  :------------------ Comment -----------------------------------
1050  :     行の : より後ろはコメントとなる
1060  :--------------------------------------------------------------
1070 ^FOR_TEST
1080  / " FOR は 変数名=初期値, 終値  ... @=変数名 + ステップ " /
1090  A=1,10
1100    ?(6)=A
1110  @=A+1
1120 ^LABEL
1130 ^DO_TEST
1140  A=12
1150  / " DO ループは @ ... @=(終了条件) " /
1160  @
1170    A=A-1
1180    ?(6)=A
1190  @=(A<=0)
1200  / " IF 文の例 " /
1210  B=1,2
1220    ;=B=1 " B=1 " /
1230    ;=B=2 " B=2 " /
1240  @=B+1
1250  / " 数値入力と演算 " /
1260  "A = ?" A=?
1270  "B = ?" B=?
1280  "A + B = " ?=A " + " ?=B " = " ?=A+B /
1290  "A * B = " ?=A " * " ?=B " = " ?=A*B /
1300  / " 変数スタックによるスワップ "
1310  a=1 b=2 c=3 "a=1 b=2 c=3 d=4" /
1320  +abcd
1330  a=0 b=0 c=0 d=0 : 別の値を書き込んで変数スタックのテスト
1340  -dcba
1350  "a=" ?=a " b=" ?=b " c=" ?=c /
1360  / " 配列と文字出力 " /
1370  :--------配列のアドレスを$1000とする
1380  D=&+$1000
1390  C=0,9
1400    : 2バイト配列として書きこみ
1410    ?=C /
1420    D{C}=(C+$20)*256+C+$20
1430  @=C+1
1440  ?=C /
1450  C=0,39
1460    : 1バイト配列として読み出して文字出力
1470    ?=C " "
1480  :  $=D(C)
1490  @=C+1
1500  / " GOTO と GOSUB " /
1510  I=1
1520 ^Sub
1530  I=I+1
1540  !=^Sub2
1550   ?(8)=I*I
1560  ;=I=10 #=^Sub1
1570  !=^Sub2
1580 ^Sub1
1590  / "プログラムの終了 " /
1600  #=-1
1610 ^Sub2
1620  / " サブルーチン " /
1630  ?(8)=I*I
1640  ]
