1000 :------------------------------------------------
1010 : rvtl check
1020 :------------------------------------------------
1030 :------------------------------------------------
1040 : SYSTEM
1050 :------------------------------------------------
1060   "# Line starts from     :  " ?=#  /     : # 実行中の行番号
1070   "= Program starts from  : $" ??== /     : = プログラム先頭アドレス
1080   "& Program ends at      : $" ??=& /     : $ コードの最終使用アドレス+1
1090   "  Program size         :  " ?=&-= " bytes" /
1100   ", Memory Top           : $" ??=, /     : , アクセス可能先頭アドレス
1110   "* Memory End           : $" ??=* /     : * メモリ最終位置を保持
1120   "  Merory size          :  "  ?=*-, " bytes" /
1130   T=_                                     : _ 現在の秒
1140   "_ Second               : " ?=T /
1150   U=%                                     : % マイクロ秒
1160   "  Micro second         : " ?[6]=U /
1170   w=.                                     : . ウィンドウサイズ
1180   ". Screen Width         : " ?=w>>16 /   : 上位16ビットに幅(文字単位)
1190   "         Height        : " ?=w&$ffff / :下位16ビットに高さ(文字単位)
1200   "  Expand Memory *=*+$1000  $" *=*+$1000 ??=* / :メモリ最終(brk)を設定
1210 /
1220 :------------------------------------------------
1230 : RANGE CHECK
1240 :------------------------------------------------
1250   "Range check" /
1260   "  ?=[     :" ?=[ /
1270   "  [=0 ?=[ :" [=0 ?=[ /
1280   "  [=1 ?=[ :" [=1 ?=[ /
1290 /
1300 :------------------------------------------------
1310 : ASSIGN
1320 :------------------------------------------------
1330   "Assign" /
1340   "  A=1234567890   "  A=1234567890 ?=A /
1350   "  a=1234567891   "  a=1234567891 ?=a /
1360   "  B=12345        "  B=12345 ?=B /
1370   "  b=12346        "  b=12346 ?=b /
1380   "  C=-12345       "  C=-12345 ?=C /
1390   "  c=-12346       "  c=-12346 ?=c /
1400   "  D=2            "  D=2  ?=D /
1410   "  d=2            "  d=2  ?=d /
1420   "  X=$12345678    "  X=$12345678  ??=X /
1430   "  x=-$12345678   "  x=-$12345678 ??=x /
1440   "  E=" $=$27 "A" $=27 " ?=E" E='A' ?=27 /
1450   /
1460   "  LongVariable='L' " LongVariable='L' $=L /
1470   "  VeryLongVariableMayBePossible='V' "
1480   VeryLongVariableMayBePossible='V' $=V /
1490   "  True=1   True ="  True=1 ?=True /
1500   "  False=0  False="  False=0 ?=False /
1510 /
1520 :------------------------------------------------
1530 : PRINT
1540 :------------------------------------------------
1550   "?=a     " ?=a     / :式の値を10進数で出力。
1560   "??=a    " ??=a    / :式の値を16進数8桁で出力。
1570   "?#=a    " ?#=a    / :式の値を16進数4桁で出力。
1580   "?$=a    " ?$=a    / :式の値を16進数2桁で出力。
1590   "?*=a    " ?*=a    / :式の値を符号無し10進数で出力。
1600   "$=$4A      " $=$4A   / :文字コードとして出力。
1610   "$$=$4A4B   " $$=$4A4B   / :2文字の文字コードとして出力。
1620   "$#=$313233 " $#=$313233 / :4文字の文字コードとして出力。
1630   ".=d      >" .=d "<" / :空白を式 e の値の数だけ出力。
1640 /
1650 :------------------------------------------------
1660 : PRINT 2
1670 :------------------------------------------------
1680   n=8
1690   "?(" ?=n ")=a  " ?(n)=a  / :10進数を n 桁右寄せ
1700   "?[" ?=n "]=+a " ?[n]=+a / :10進数を上位桁を0で埋めたn桁で出力
1710   "?{" ?=n "}=a  " ?{n}=a  / :10進数で出力
1720   "?!" ?=n "!=a  " ?!n!=a  / :式の値の下位を2進数で出力
1730   n=n+8
1740   ;=n<=32 #=1690
1750 /
1760 :------------------------------------------------
1770 : SLEEP
1780 :------------------------------------------------
1790   "sleep 1 sec." /
1800   _=1000000  : マイクロ秒単位の sleep
1810 :------------------------------------------------
1820 : Binary operator
1830 :------------------------------------------------
1840   ?=A " + " ?=B " = " ?=A+B    /          : 加算
1850   ?=A " - " ?=B " = " ?=A-B    /          : 減算
1860   ?=A " * " ?=B " = " ?=A*B    /          : 乗算
1870   ?=A " / " ?=B " = " ?=A/B ".." ?=%   /  : 除算
1880   ?=A " / " ?=C " = " ?=A/C ".." ?=%   /  : 除算
1890   ?=A " & " ?=B " = " ?=A&B    /          : ビット論理積
1900   ?=A " \ " ?=B " = " ?=A\B ".." ?=%   /  : 無符号除算
1910   ?=A " \ " ?=C " = " ?=A\C ".." ?=%   /  : 無符号除算
1920   ?=A " ^ " ?=B " = " ?=A^B    /          : 排他的論理和
1930   ?=A " | " ?=B " = " ?=A|B    /          : ビット論理和
1940   ?=A " >> " ?=D " = " ?!32!=A>>D   /     : 右シフト
1950   ?=A " << " ?=D " = " ?!32!=A<<D   /     : 左シフト
1960 /
1970 :------------------------------------------------
1980 : Uninary operator
1990 :------------------------------------------------
2000   "C    " ?=C  /
2010   "-C   " ?=-C /    : Cの符号反転
2020   "--C  " ?=--C /
2030   "+C   " ?=+C /    : Cの絶対値
2040   "+--C " ?=+--C /
2050 /
2060 :------------------------------------------------
2070 : Compare
2080 :------------------------------------------------
2090 "Compare" /
2100   " A = " ?=A "   B = " ?=B /
2110   " A=B  = " ?=A=B  / : AとB が等しければ 1、それ以外は 0
2120   " A<B  = " ?=A<B  / : AがB より小さければ 1、それ以外は 0
2130   " A>B  = " ?=A>B  / : AがB より大きければ 1、それ以外は 0
2140   " A>=B = " ?=A>=B / : AがB が以上ならば 1、それ以外は 0
2150   " A<=B = " ?=A<=B / : AがB が以下ならば 1、それ以外は 0
2160   " A<>B = " ?=A<>B / : AとB が等しくなければ 1、それ以外は 0
2170 /
2180 :------------------------------------------------
2190 : Array
2200 :------------------------------------------------
2210 "Array" /
2220   P=&
2230   Q=P+100
2240   "  P{0}=$123456 ?#=P{0} " P{0}=$123456
2245   ?#=P{0}
2250   " ?#=P(0) " ?#=P(0) /
2260   "  P(99)=123 ?=P(99)    " P(99)=123 ?=P(99) /
2270   "  Q[5]=456  ?=Q[5]     " Q[5]=456  ?=Q[5] /
2280   "  Q*=" $=$22 "ABCDE12345" $=$22 Q*="ABCDE12345"
2290   " $*=Q ?=% " $*=Q " %:" ?=% /
2300   "  P*=Q ?=% $*=P " P*=Q " %:" ?=% " " $*=P  /
2310 /
2320 :------------------------------------------------
2330 : LOCAL VARIABLE
2340 :------------------------------------------------
2350   "Local Variable" /
2360     " A=10 B=20 C=30 D=40 " /
2370     A=10 B=20 C=30 D=40
2380     ?(5)=A ?(5)=B ?(5)=C ?(5)=D /
2390     " +ABCD "  +ABCD /  : push
2400     A=111 B=222 C=333 D=444
2410     ?(5)=A ?(5)=B ?(5)=C ?(5)=D /
2420     " -DCBA "  -DCBA /  : pop
2430     ?(5)=A ?(5)=B ?(5)=C ?(5)=D /
2440     " +ABCD "  +ABCD /  : push
2450     A=111 B=222 C=333 D=444
2460     " -ABCD "  -ABCD /  : pop
2470     ?(5)=A ?(5)=B ?(5)=C ?(5)=D /
2480     " +=A " ?(5)=A  +=A  "?(5)=;" ?(5)=;  /   : pop
2490 /
2500 :------------------------------------------------
2510 : FOR - NEXT
2520 :------------------------------------------------
2530   "FOR-NEXT asc  "
2540     A=1,10
2550       ?=A
2560     @=A+1 /
2570   "FOR-NEXT desc "
2580     A=9,0
2590       ?=A
2600     @=A-1
2610 /
2620 :------------------------------------------------
2630 : DO - UNTIL RANDOM
2640 :------------------------------------------------
2650   `=1234                    : 擬似乱数シード設定
2660   "DO-UNTIL "
2670     I=0
2680     @
2690       A=`/6 ?=+%
2700       I=I+1
2710     @=(I>=30)
2720 /
2730 :------------------------------------------------
2740 : コマンドライン引数
2750 :------------------------------------------------
2760   "ARGS "
2770   I=0                  : 最初の引数
2780   [=0                  : 範囲チェックを OFF
2790   @                    : 繰り返し (DO)
2800     S=\I               : 引数の先頭アドレス
2810     ;=S(0)<>0 $*=S /   : 引数を表示
2820     I=I+1              : 次の引数
2830   @=(S(0)=0)           : 空文字列なら繰り返しを終了
2840   [=1                  : 範囲チェックを ON に戻す
2850 /
2860 :------------------------------------------------
2870 : LABEL
2880 :------------------------------------------------
2890   "!=^LABEL01" !=^LABEL01
2900   "!=^LABEL02" !=^LABEL02
2910   "!=^LABEL03" !=^LABEL03
2920   "!=^LABEL04" !=^LABEL04
2930   #=^NEXT
2940   ^LABEL01
2950     " LABEL01 Line:" ?=# / ]
2960   ^LABEL02
2970     " LABEL02 Line:" ?=# / ]
2980   ^LABEL03
2990     " LABEL03 Line:" ?=# / ]
3000   ^LABEL04
3010     " LABEL04 Line:" ?=# / ]
3020   ^NEXT
3030 /
3040 :------------------------------------------------
3050 : FILE
3060 :------------------------------------------------
3070    {==+$100
3080    A={
3090    B=0,15
3100      A(B)=B+'@'
3110    @=B+1
3120    " from " ??={ /
3130    }={+$FF
3140    "Write : check.bin " ?=}-{ /
3150    (="check.bin" /
3160    {=&
3170    )="check.bin" /
3180    "read :" ?=)  /
3185    ??={  / ??=} /
3190    I={,(}-200)
3200    ;=I(0)<=$20 " "
3210        $=I(0)
3220    @=I+1
3230 /
3240 :------------------------------------------------
3250 :
3260 :------------------------------------------------
3270     " a=1234567890123456789   "
3280     a=1234567890123456789 ?=a  /
3290     " a=-1234567890123456789  "
3300     a=-1234567890123456789 ?=a  /
3310     /
3320     A=1234567  D=16
3330     " A = " ?!32!=A /
3340     ?=A " >> " ?=D " = " ?!32!=A>>D   /   : 右シフト
3350     ?=A " << " ?=D " = " ?!32!=A<<D   /   : 左シフト
3360     A=1234567  D=39
3370     ?=A " >> " ?=D " = " ?!32!=A>>D   /   : 右シフト
3380     ?=A " << " ?=D " = " ?!32!=A<<D   /   : 左シフト
3390     /
3400     n=23,48
3410       "?(" ?=n ")=a  " ?(n)=a  /
3420       "?[" ?=n "]=+a " ?[n]=+a /
3430       "?{" ?=n "}=a  " ?{n}=a  /
3440       "?!" ?=n "!=a  " ?!n!=a  /
3450     @=n+7
3460 /
3470 :------------------------------------------------
3480 : | command
3490 :------------------------------------------------
3495 :#=3590
3500   "/bin/ls -l | /usr/bin/wc" / ,="/bin/ls -l | /usr/bin/wc "
3510   /
3520   "|ca /etc/hostname" / |ca /etc/hostname /
3530   "P*=" $=$22 "/etc/hostname" $=$22 " |ca*=P"
3540   P*="/etc/hostname" |ca*=P /
3550   "|ls ./" / |ls ./
3560   "|cw" / |cw
3570   :"|cd /etc" / |cd /etc
3580   :"|cw" / |cw
3590 /
3600 :------------------------------------------------
3610 : INPUT
3620 :------------------------------------------------
3630 :    #=^skip
3640     "Number  = " A=?        /
3650     "Hit Any Key! " A=$     /
3660     i=1
3670     @
3680       A=@
3690       ?=A
3695       _=100000  : マイクロ秒単位の sleep
3700       i=i+1
3710     @=(i=10)
3720 :    ^skip
3730 /
3740 :------------------------------------------------
3750 : END
3760 :------------------------------------------------
3770     #=-1  : END文
3780 :
3790 :------------------------------------------------
3800 : RENUM TEST
3810 :------------------------------------------------
3820     #=1980  " #=100" : #=100
3830 #=1980  " #=100"  #=1980
3840 #!=100
